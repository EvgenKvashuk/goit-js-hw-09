{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAY,WACNH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAASC,S,GAEnBA,E,IAUN,SAASQ,EAAWC,G,IAACV,EAADU,EAACV,SAAUC,EAAXS,EAAWT,MAC7BU,EAAAd,GAASe,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,OACpEc,QAAMC,IAAIhB,E,CAGd,SAASiB,EAAUP,G,IAACV,EAADU,EAACV,SAAUC,EAAXS,EAAWT,MAC5BU,EAAAd,GAASe,OAAOM,QAAQ,sBAAqCJ,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,EAzCxD,CACXkB,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAIC,iBACJ,IAAMC,EAAY,CAChBxB,MAAOyB,OAAOH,EAAII,OAAOC,SAAS3B,MAAM4B,OACxCC,KAAMJ,OAAOH,EAAII,OAAOC,SAASE,KAAKD,OACtCE,OAAQL,OAAOH,EAAII,OAAOC,SAASG,OAAOF,SAkB9C,SAAoB5B,EAAO6B,EAAMC,GAC/B,IAAK,IAAIC,EAAI,EAAGC,EAAahC,EAAO+B,GAAKD,EAAQC,GAAK,EAAGC,GAAcH,EACrE/B,EAAciC,EAAGC,GAAYC,KAAKzB,GAAW0B,MAAMlB,E,CAlBrDmB,CAAWX,EAAUxB,MAAOwB,EAAUK,KAAML,EAAUM,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit (evt) {\n  evt.preventDefault();\n  const inputDate = {\n    delay: Number(evt.target.elements.delay.value),\n    step: Number(evt.target.elements.step.value),\n    amount: Number(evt.target.elements.amount.value),\n  };\n  runPromise(inputDate.delay, inputDate.step, inputDate.amount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout (() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position,delay});\n      }\n    },delay);   \n  });\n  \n}\nfunction runPromise(delay, step, amount) {\n  for (let i = 1, innerDelay = delay; i <= amount; i += 1, innerDelay += step) {\n    createPromise(i, innerDelay).then(onResolve).catch(onReject);\n  }\n}\n\nfunction onResolve ({position, delay}) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  console.log(position);\n};\n\nfunction onReject ({position, delay}) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onResolve","param","$parcel$interopDefault","Notify","success","concat","console","log","$ce04d3a99e08e73b$var$onReject","failure","form","document","querySelector","addEventListener","evt","preventDefault","inputDate","Number","target","elements","value","step","amount","i","innerDelay","then","catch","$ce04d3a99e08e73b$var$runPromise"],"version":3,"file":"03-promises.dcd59e3b.js.map"}
{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAUb,SAASQ,GAAUT,SAAEA,EAAQC,MAAEA,IAC7BS,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBZ,QAAiBC,M,CAGhE,SAASY,GAASb,SAAEA,EAAQC,MAAEA,IAC5BS,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBd,QAAeC,M,EAhDhD,CACXc,KAAMC,SAASC,cAAc,SAE7BhB,MAAOe,SAASC,cAAc,aAC9BC,KAAMF,SAASC,cAAc,YAC7BE,OAAQH,SAASC,cAAc,gBAK5BF,KAAKK,iBAAiB,UAAWC,IACpCA,EAAIC,iBAEJ,MAAMC,EAAY,CAChBtB,MAAOuB,OAAOH,EAAII,OAAOC,SAASzB,MAAM0B,OACxCT,KAAMM,OAAOH,EAAII,OAAOC,SAASR,KAAKS,OACtCR,OAAQK,OAAOH,EAAII,OAAOC,SAASP,OAAOQ,SAqB9C,SAAkB1B,EAAOiB,EAAMC,GAC7B,IAAK,IAAIS,EAAI,EAAGA,GAAKT,EAAQS,GAAK,EAAG3B,GAASiB,EAC5CnB,EAAc6B,EAAG3B,GAAO4B,KAAKpB,GAAWqB,MAAMjB,E,CApBhDkB,CAASR,EAAUtB,MAAOsB,EAAUL,KAAMK,EAAUJ,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n\n  delay: document.querySelector('.delay_js'),\n  step: document.querySelector('.step_js'),\n  amount: document.querySelector('.amount_js'),\n\n}\n\n\nrefs.form.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n\n  const inputDate = {\n    delay: Number(evt.target.elements.delay.value),\n    step: Number(evt.target.elements.step.value),\n    amount: Number(evt.target.elements.amount.value),\n  };\n\n  onSubmit(inputDate.delay, inputDate.step, inputDate.amount);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n};\nfunction onSubmit(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1, delay += step) {\n    createPromise(i, delay).then(onResolve).catch(onReject);\n  }\n};\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onResolve","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onReject","failure","form","document","querySelector","step","amount","addEventListener","evt","preventDefault","inputDate","Number","target","elements","value","i","then","catch","$47d4ff9957288465$var$onSubmit"],"version":3,"file":"03-promises.1e9c8ef1.js.map"}